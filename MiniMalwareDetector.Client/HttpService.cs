using System.Net.Http.Headers;
using Microsoft.AspNetCore.Http;

namespace MiniMalwareDetector.Client;

internal class HttpService
{
    private HttpClient _httpClient = new HttpClient();
    private string _uri = "https://localhost:5001/api/Scan";

    internal async Task<string> GetStatusScan(string id)
    {
        var response = await _httpClient.GetAsync($"{_uri}/{id}");
        return await response.Content.ReadAsStringAsync();
    }

    internal async Task<string> SendFilesForScan(string pathDirectory)
    {
        var filesPath = Directory.GetFiles(pathDirectory, "*", SearchOption.AllDirectories).ToList();
        var files = ConvertToFormFile(filesPath);
        
        var content = new MultipartFormDataContent();
        foreach (var file in files)
        {
            var fileContent = new StreamContent(file.OpenReadStream());
            fileContent.Headers.ContentDisposition = new ContentDispositionHeaderValue("form-data")
                { Name = "formFiles", FileName = file.FileName };
            content.Add(fileContent);
        }
        content.Add(new StringContent(pathDirectory), "pathDirectoryScan");
        var response = await _httpClient.PostAsync(_uri, content);
        return await response.Content.ReadAsStringAsync();
    }

    private List<FormFile> ConvertToFormFile(List<string> filesPath)
    {
        var result = new List<FormFile>();
        foreach (var filePath in filesPath)
        {
            var stream = new MemoryStream(File.ReadAllBytes(filePath).ToArray());
            var file = new FormFile(stream, 0, stream.Length, filePath, Path.GetFileName(filePath));
            result.Add(file);
        }

        return result;
    }
}