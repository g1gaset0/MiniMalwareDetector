using Microsoft.AspNetCore.Mvc;
using MiniMalwareDetector.Core;
using MiniMalwareDetector.Core.Helpers;

namespace MiniMalwareDetector.Server.Controllers
{
    /// <summary>
    /// Контроллер сканирования
    /// </summary>
    [Route("api/[controller]")]
    [ApiController]
    public class ScanController : ControllerBase
    {
        private readonly IFileService _fileService;
        private readonly IScanService _scanService;

        public ScanController(IFileService fileService, IScanService scanService)
        {
            _fileService = fileService;
            _scanService = scanService;
        }

        /// <summary>
        /// Возвращает отчет сканирования файлов по id сканирования
        /// </summary>
        /// <param name="id">Guid сканирования</param>
        /// <returns>Отчет сканирования</returns>
        [HttpGet("{id}")]
        public async Task<string> Get(string id)
        {
            return _scanService.GetReport(id);
        }
        
        /// <summary>
        /// Создает задачу сканирования
        /// </summary>
        /// <param name="formFiles">Список файлов для сканиривания</param>
        /// <param name="pathDirectoryScan">Директория сканирования</param>
        /// <returns>Id сканирования</returns>
        [HttpPost]
        public async Task<string> Post([FromForm] List<IFormFile> formFiles,[FromForm] string pathDirectoryScan)
        {
            var id = Guid.NewGuid().ToString();
            var filesForm = await _fileService.SaveFiles(formFiles);
            Task.Run(() => _scanService.Scan(id, pathDirectoryScan, filesForm));
            return id;
        }
    }
}
